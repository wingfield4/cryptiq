swagger: "2.0"
info:
  description: "This is a rough outline of what our cryptiqapp/com API will look like. Everything subject to change."
  version: "1.0.0"
  title: "Crytiq"
host: "cryptiqapp.com"
basePath: "/api/v1"
tags:
- name: 'messages'
  description: "Route to get batches of messages since last update"
- name: "message"
  description: "Routes to send, receive, and delete messages"
- name: "user"
  description: "Routes to find, add, update, and delete users"
- name: "status"
  description: "Operations about user"
schemes:
- "https"
paths:
  /messages/{timestamp}:
    get:
      tags:
      - "messages"
      summary: "Get messages since last update (i.e. when booting up the app)"
      description: ""
      operationId: "getMessages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userToken"
        in: "header"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      - name: "timestamp"
        in: "path"
        description: "Time at last point of update"
        required: true
        type: "string"
      responses:
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "read:messages"
  /message:
    post:
      tags:
      - "message"
      summary: "Add (send) a new message"
      description: ""
      operationId: "addMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userToken"
        in: "header"
        description: "Auth token of user"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Message object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Message"
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:messages"
        - "read:messages"
    put:
      tags:
      - "message"
      summary: "Update an existing message (delieveredAt, readAt, etc...)"
      description: ""
      operationId: "updateMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userToken"
        in: "header"
        description: "Auth token of user"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Message object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        "401":
          description: "Unauthorized"
        "404":
          description: "Message not found"
        "405":
          description: "Validation exception"
      security:
      - petstore_auth:
        - "write:messages"
        - "read:messages"
  /message/{messageId}:
    delete:
      tags:
      - "message"
      summary: "Deletes a message"
      description: ""
      operationId: "deleteMessage"
      produces:
      - "application/json"
      parameters:
      - name: "userToken"
        in: "header"
        description: "Auth token of user"
        required: true
        type: "string"
      - name: "messageId"
        in: "path"
        description: "Message id to delete"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "400":
          description: "Invalid ID supplied"
        "401":
          description: "Unauthorized"
        "404":
          description: "Message not found"
      security:
      - petstore_auth:
        - "write:messages"
        - "read:messages"
  /user:
    post:
      tags:
      - "user"
      summary: "Add a new user (create account)"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userToken"
        in: "header"
        description: "Auth token of user"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "User object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Message"
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:messages"
        - "read:messages"
    put:
      tags:
      - "user"
      summary: "Update an existing user"
      description: ""
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userToken"
        in: "header"
        description: "Auth token of user"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "User object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "401":
          description: "Unauthorized"
        "404":
          description: "User not found"
        "405":
          description: "Validation exception"
      security:
      - petstore_auth:
        - "write:messages"
        - "read:messages"
  /user/{userId}:
    delete:
      tags:
      - "user"
      summary: "Deletes a user"
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "userToken"
        in: "header"
        description: "Auth token of user"
        required: true
        type: "string"
      - name: "userId"
        in: "path"
        description: "Message id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "401":
          description: "Unauthorized"
        "404":
          description: "Pet not found"
      security:
      - petstore_auth:
        - "write:users"
        - "read:users"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:users: "modify pets in your account"
      read:users: "read your pets"
      write:messages: "add messages"
      read:messages: "read message form or to you"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      username:
        type: "string"
      publicKey:
        type: "string"
      firstName:
        type: "string"
      middleName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
    xml:
      name: "User"
  Message:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      encryptedContent:
        type: "string"
      sentAt:
        type: "string"
        format: "date"
      sentFrom:
        $ref: "#/definitions/User"
      sentTo:
        $ref: "#/definitions/User"
      receivedAt:
        type: "string"
        format: "date"
      readAt:
        type: "string"
        format: "date"
    xml:
      name: "Message"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"